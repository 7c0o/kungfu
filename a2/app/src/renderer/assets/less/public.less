@import '@renderer/assets/less/variables.less';

.kf-translateZ {
    position: relative;
    transform: translateZ(0);
}

.kf-actions__warp {
    .anticon {
        margin-left: 16px;

        &:hover {
            color: @primary-color;
            cursor: pointer;
        }
    }
}

.kf-table {
    height: 100%;
    width: 100%;
}

.kf-hover {
    &:hover {
        color: @primary-color;
        cursor: pointer;
    }
}

.keyframes(@name, @rules) {
    @-webkit-keyframes @name {
        @rules();
    }

    @-moz-keyframes @name {
        @rules();
    }

    @-ms-keyframes @name {
        @rules();
    }

    @-o-keyframes @name {
        @rules();
    }

    @keyframes @name {
        @rules();
    }
}

.keyframes(KfStatusRunning, {
    0% {
        width: 6px;
        height: 6px;
        box-shadow: 0 0 0;
    }
    100% {
        width: 10px;
        height: 10px;
        box-shadow: 0 0 6px @primary-color
    }
});

.keyframes(KfStatusWaiting, {
    0% {
        width: 6px;
        height: 6px;
        box-shadow: 0 0 0;
    }
    100% {
        width: 10px;
        height: 10px;
        box-shadow: 0 0 6px fade(@white, 50%);
    }
});

.kf-dot {
    width: 6px;
    height: 6px;
    display: inline-block;
    border-radius: 50%;
    vertical-align: middle;
    margin-right: 4px;

    &.kf-color-running {
        background: @primary-color;

        &.kf-dot-wave {
            &::after {
                border: 1px solid @primary-color;
                animation: KfStatusRunning 1s infinite ease-in-out;
            }
        }
    }

    &.kf-color-waiting {
        background: fade(@white, 50%);

        &.kf-dot-wave {
            &::after {
                border: 1px solid fade(@white, 50%);
                animation: KfStatusWaiting 1s infinite ease-in-out;
            }
        }
    }

    &.kf-color-error {
        background: @red-6;
    }

    &.kf-dot-wave {
        position: relative;

        &::after {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translateY(-50%) translateX(-50%);
            width: 6px;
            height: 6px;
            border-radius: 50%;
            content: '';
        }
    }
}

.text-overflow {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
}

.text-right {
    text-align: right;
}

.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}

.color-default {
    color: fade(@white, 50%);
}
.color-orange {
    color: @orange-6;
}
.color-yellow {
    color: @yellow-6;
}
.color-pink {
    color: @pink-6;
}
.color-red {
    color: lighten(@red2-base, 10%);
}
.color-blue {
    color: @blue-6;
}
.color-purple {
    color: @purple-6;
}
.color-cyan {
    color: @cyan-6;
}
.color-green {
    color: @green2-base;
}

.keyframes (@prefix,@name,@content) when (@prefix=def) {
    @keyframes @name {
        @content();
    }
}
.keyframes (@prefix,@name,@content) when (@prefix=moz) {
    @-moz-keyframes @name {
        @content();
    }
}
.keyframes (@prefix,@name,@content) when (@prefix=o) {
    @-o-keyframes @name {
        @content();
    }
}
.keyframes (@prefix,@name,@content) when (@prefix=webkit) {
    @-webkit-keyframes @name {
        @content();
    }
}
.keyframes (@prefix,@name,@content) when (@prefix=all) {
    .keyframes(moz,@name,@content);
    .keyframes(o,@name,@content);
    .keyframes(webkit,@name,@content);
    .keyframes(def,@name,@content);
}

.keyframes(all, nanoRedBlink, {
        0% {
            background: none;
        }
        50% {
            background: @red-6;
            color: #fff;
        }
        100% {
            background: none;
        }
    }
);

.keyframes(all, nanoGreenBlink, {
        0% {
            background: none;
        }
        50% {
            background: @green-6;
            color: #fff;
        }
        100% {
            background: none;
        }
    }
);

.ant-btn-dangerous.ant-btn-primary {
    background: @red-6;
    border-color: @red-6;
}
